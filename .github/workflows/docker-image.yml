name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build-upload-release:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with maven
      run: mvn --batch-mode --update-snapshots package

    - name: Setup Node.js and semantic-release plugins
      uses: actions/setup-node@v1
      with:
        node-version: 16
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

    - run: npm install -g semantic-release @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/exec semantic-release/git semantic-release/release-notes-generator

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      run: npx semantic-release

    - name: Prepare app version
      id: prep
      run: |
        VERSION=${GITHUB_SHA::8}
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF/refs\/tags\//}
        fi
        echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        echo ::set-output name=VERSION::${VERSION}
        echo $1

#    - name: Build & Push Docker Image
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: hellozakir/product-management
#        tags: ${{ steps.prep.outputs.VERSION }}
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Checkout project-management-config
#      uses: actions/checkout@v3
#      with:
#        repository: zakirhossain-dsi/project-management-config
#        path: project-management-config
#        ref: 'master'
#        token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
#
#    - name: Update project-management-config
#      uses: mikefarah/yq@master
#      with:
#        cmd: yq -i '.spec.template.spec.containers[0].image = "docker.io/hellozakir/product-management:${{ steps.prep.outputs.VERSION }}"' ./project-management-config/k8s/deployment.yaml
#
#    - name: Push project-management-config
#      run: |
#        cd project-management-config
#        git config --global user.email "zakir@cefalo.com"
#        git config --global user.name "zakir"
#        git commit -am "Updated manifests"
#        git push
